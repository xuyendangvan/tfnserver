/*
 * Demo App
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"strings"
	"time"
)

type CustomTime time.Time

type Form struct {
	Id int64 `json:"id,omitempty"`

	Repeated int32 `json:"repeat,omitempty"`
	// type: 1- nghi hoc, 2- don tre, 3- huy bua
	Type_ int32 `json:"type,omitempty"`

	StudentID int32 `json:"studentID,omitempty"`

	PosterID int32 `json:"posterID,omitempty"`

	PickerName string `json:"pickerName,omitempty"`

	PickerPhone string `json:"pickerPhone,omitempty"`

	PickerPhoto string `json:"pickerPhoto,omitempty"`

	// class: 1- sang, 2- chieu
	ClassTime string `json:"classTime,omitempty"`

	Title string `json:"title,omitempty"`

	Content string `json:"content,omitempty"`

	DateRequestFrom string `json:"dateRequestFrom,omitempty"`

	DateRequestTo string `json:"dateRequestTo,omitempty"`

	TimeRequest string `json:"timeRequest,omitempty"`

	// Meal: 1- sang, 2- chieu, 3-xe, 4-ca ngay
	CancelMeal int32 `json:"cancelMeal,omitempty"`

	IsCancelMeal bool `json:"isCancelMeal,omitempty"`

	LateMeal bool `json:"lateMeal,omitempty"`

	DateCreated string `json:"dateCreated,omitempty"`
}

// Implement Marshaler and Unmarshaler interface
func (j *CustomTime) UnmarshalJSON(b []byte) error {
	s := strings.Trim(string(b), "\"")
	t, err := time.Parse("2006-01-02", s)
	if err != nil {
		return err
	}
	*j = CustomTime(t)
	return nil
}

func (j CustomTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(j)
}

// Maybe a Format function for printing your date
func (j CustomTime) Format(s string) string {
	t := time.Time(j)
	return t.Format(s)
}
